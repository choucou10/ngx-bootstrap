# todo: build and test only affected

name: Build Test and Deploy
on: pull_request

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
  MOZ_HEADLESS: 1
#  SAUCE_USERNAME_PR: valorkinpr
#  SAUCE_ACCESS_KEY_PR: e0a97bd3-4b74-4408-89bf-cce1b44a8bf1
  CYPRESS_RECORD_KEY: 4aa7a1c0-3a4f-444e-b324-6fc305a543a8

jobs:
  build_and_cache:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      # start: npm ci && build
      - uses: actions/cache@v2.1.4
        id: cache-build
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm ci
      # end: npm ci && build
      - run: |
          npm run build -- --prod --with-deps
          npm run nx -- run ngx-bootstrap:node-sass

  firebase_preview:
    runs-on: ubuntu-latest
    needs: build_and_cache
    outputs:
      output_url: ${{ steps.firebase_hosting_preview.outputs.details_url }}
    steps:
      - uses: actions/checkout@v2.3.4

      # start: npm ci && build
      - uses: actions/cache@v2.1.4
        id: cache-build
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm ci && npm run build --prod
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm run build -- --prod --with-deps
    # end: npm ci && build

      - run: npm run scully
      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase_hosting_preview
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_NGX_BOOTSTRAP_DEMO }}'
          projectId: ngx-bootstrap-demo
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

  gh_pages_deploy:
    runs-on: ubuntu-latest
    needs: build_and_cache
    outputs:
      output_url: ${{ steps.firebase_hosting_preview.outputs.details_url }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/checkout@v2.3.4
        with:
          ref: 'gh-pages'
          path: 'gh-pages'

      # start: npm ci && build
      - uses: actions/cache@v2.1.4
        id: cache-build
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm ci && npm run build --prod
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm run build -- --prod --with-deps
    # end: npm ci && build

      - run: npm run scully
      - run: |
          ./node_modules/.bin/ts-node ./scripts/gh-pages-predeploy.ts
          cd gh-pages
          git config user.email "valorkin@gmail.com"
          git config user.name "ngx bootstrap ci"
          git add -A
          git commit -am "ci: gh-pages update"
      - name: push to gh-pages
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'gh-pages'
          directory: 'gh-pages'

  test_and_lint:
    runs-on: ubuntu-latest
    needs: build_and_cache
    steps:
      - uses: actions/checkout@v2.3.4
#   - run: npm ci
#   - run: npm run build -- --prod
#      - run: npm run lint
#        continue-on-error: true
#      - run: npm test
#        continue-on-error: true

  e2e_smoke:
    name: Cypress run
    runs-on: ubuntu-latest
    needs: [build_and_cache, firebase_preview]

    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v2.3.4

      # start: npm ci && build
      - uses: actions/cache@v2.1.4
        id: cache-build
        with:
          path: |
            ~/.npm
            ~/.cache/Cypresss
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm ci && npm run build --prod
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm run build -- --prod --with-deps
      # end: npm ci && build

      - name: smoke e2e
        continue-on-error: true
        run: ./node_modules/.bin/nx run ci-docs-e2e:e2e --record --group smoke --baseUrl=${{ needs.firebase_preview.outputs.output_url }}/ngx-bootstrap/ -- --parallel

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves

